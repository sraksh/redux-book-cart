{"version":3,"sources":["components/ProductListItem/ProductListItem.js","components/ProductList/ProductList.js","components/Loader/Loader.js","actions/index.js","actions/action-types.js","App.js","components/ProductDetails/ProductDetails.js","components/AddressForm/AddressForm.js","components/Cart/Cart.js","reducers/productItemReducer.js","reducers/cartReducer.js","reducers/index.js","services/api.js","sagas/saga.js","store/index.js","components/Navbar/Navbar.js","components/MyOrders/MyOrders.js","index.js"],"names":["ProductListItem","product","Id","ID","to","pathname","productId","className","Title","Description","PageCount","ProductList","props","useEffect","actions","getProducts","productItems","length","map","item","key","Fragment","Loader","React","Component","type","getProductDetails","id","clearProductDetails","addItem","data","App","this","connect","state","productItemReducer","loading","dispatch","bindActionCreators","Actions","productDetails","match","params","src","alt","onClick","history","push","Excerpt","AddressForm","handleSubmit","e","preventDefault","onSubmit","method","htmlFor","placeholder","Cart","total","cartItems","reduce","a","b","items","emptyBlock","itemsList","cartReducer","initialState","action","isAddedToCart","rootReducer","combineReducers","payload","res","URL","fetchProducts","axios","get","fetchProductDetails","fetchProductsSaga","fetchProductDetailsSaga","watchGetProducts","watchGetProductDetails","rootSaga","call","put","takeLatest","all","sagaMiddleware","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","logger","store","createStore","run","role","exact","location","PublishDate","wrapper","component","Navbar","path","ProductDetails","MyOrders","ReactDOM","render","document","getElementById"],"mappings":"8oBAqCeA,EAhCS,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAClBC,EAAKD,EAAQE,GACjB,OACE,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAS,YAAD,OAAcH,GACtBI,UAAW,CAAEJ,QAGf,yBAAKK,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAcN,EAAQO,OACpC,yBAAKD,UAAU,iBACZN,EAAQQ,aAEX,yBAAKF,UAAU,mBAAf,UACUN,EAAQS,WAElB,kBAAC,IAAD,CAASH,UAAU,eAAeH,GAAG,SACnC,4BAAQG,UAAU,eAAlB,gBCCCI,EApBK,SAAAC,GAKlB,GAJAC,qBAAU,WACRD,EAAME,QAAQC,gBAEb,IACCH,EAAMI,aAAaC,OAAQ,CAC7B,IAAID,EAAeJ,EAAMI,aAAaE,KAAI,SAAAC,GACxC,OAAO,kBAAC,EAAD,iBAAqBP,EAArB,CAA4BX,QAASkB,EAAMC,IAAKD,EAAKhB,SAE9D,OAAO,yBAAKI,UAAU,sBAAsBS,GAE5C,OAAO,kBAAC,IAAMK,SAAP,uBCEIC,E,uKAZX,OACE,kC,GAHeC,IAAMC,W,eCFdT,EAAc,WACzB,MAAO,CACLU,KCFwB,iBDMfC,EAAoB,SAACC,GAChC,MAAO,CACLF,KCN+B,sBDO/BE,OAISC,EAAsB,SAACD,GAClC,MAAO,CACLF,KCTiC,0BDaxBI,EAAU,SAACC,GAAD,MAAW,CAChCL,KChBsB,WDiBtBK,SEJIC,G,6KAEF,OACE,yBAAKxB,UAAU,OACb,yBAAKA,UAAU,2BACb,kBAAC,EAAWyB,KAAKpB,OACjB,kBAAC,EAAgBoB,KAAKpB,a,GANdY,cAaHS,eAtBS,SAAAC,GAAK,MAAK,CAChClB,aAAckB,EAAMC,mBAAmBnB,aACvCoB,QAASF,EAAMC,mBAAmBC,YAGT,SAAAC,GAAQ,MAAK,CACtCvB,QAASwB,YAAmBC,EAASF,MAgBxBJ,CAA6CF,GCqD7CE,G,MAAAA,aATS,SAAAC,GAAK,MAAK,CAChCM,eAAgBN,EAAMC,mBAAmBK,eACzCJ,QAASF,EAAMC,mBAAmBC,YANT,SAAAC,GAAQ,MAAK,CACtCvB,QAASwB,YAAmBC,EAASF,MAYxBJ,EA9EQ,SAAArB,GACrBC,qBAAU,WAER,OADAD,EAAME,QAAQY,kBAAkBd,EAAM6B,MAAMC,OAAOvC,IAC5C,WACLS,EAAME,QAAQc,yBAGf,IAEH,IASIY,EAAiB5B,EAAM4B,eAC3B,OAAIA,EAEA,yBAAKjC,UAAU,6BACb,yBAAKA,UAAU,yBACb,yBACEoC,IAAI,yCACJC,IAAI,sBAGR,yBAAKrC,UAAU,+BACb,6BACE,yBAAKA,UAAU,+BAAf,eACeiC,EAAehC,OAE9B,yBAAKD,UAAU,+BAAf,eACeiC,EAAe9B,WAE9B,yBAAKH,UAAU,+BAAf,eACeiC,EAAe9B,YAGhC,6BACE,4BACEH,UAAU,oBACVsC,QAAS,kBAlCIf,EAkCmBU,OAjC1C5B,EAAME,QAAQe,QAAQC,GADC,IAAAA,IAgCf,eAMA,4BACEvB,UAAU,oBACVsC,QAAS,kBApCEf,EAoCmBU,EAnCxC5B,EAAME,QAAQe,QAAQC,QACtBlB,EAAMkC,QAAQC,KAAK,SAFE,IAAAjB,IAkCb,YAOF,yBAAKvB,UAAU,gEAAf,gBACgBiC,EAAeQ,WAM9B,kBAAC,IAAM3B,SAAP,0BCII4B,G,wNAnEbC,aAAe,SAACC,GACdA,EAAEC,kB,uDAEO,IAAD,OACR,OACE,kBAAC,IAAM/B,SAAP,KACE,gDACA,0BACEM,GAAG,eACHpB,UAAU,eACV8C,SAAU,SAACF,GAAD,OAAO,EAAKD,aAAaC,IACnCG,OAAO,QAEP,yBAAK/C,UAAU,cACb,2BAAOgD,QAAQ,QAAf,aACA,2BAAO9B,KAAK,OAAOE,GAAG,OAAO6B,YAAY,iBAE3C,yBAAKjD,UAAU,cACb,2BAAOgD,QAAQ,WAAf,WACA,2BAAO9B,KAAK,OAAOE,GAAG,UAAU6B,YAAY,oBAE9C,yBAAKjD,UAAU,cACb,yBAAKA,UAAU,UACb,2BAAOgD,QAAQ,aAAf,mBAEF,yBAAKhD,UAAU,UACb,2BAAOkB,KAAK,OAAOE,GAAG,gBAG1B,yBAAKpB,UAAU,cACb,yBAAKA,UAAU,UACb,2BAAOgD,QAAQ,aAAf,mBAEF,yBAAKhD,UAAU,UACb,2BAAOkB,KAAK,OAAOE,GAAG,gBAG1B,yBAAKpB,UAAU,cACb,yBAAKA,UAAU,UACb,2BAAOgD,QAAQ,QAAf,SAEF,yBAAKhD,UAAU,UACb,2BAAOkB,KAAK,OAAOE,GAAG,WAG1B,yBAAKpB,UAAU,cACb,yBAAKA,UAAU,UACb,2BAAOgD,QAAQ,SAAf,UAEF,yBAAKhD,UAAU,UACb,2BAAOkB,KAAK,OAAOE,GAAG,YAG1B,yBAAKpB,UAAU,wBACb,4BAAQA,UAAU,sBAAlB,eACA,4BAAQA,UAAU,sBAAlB,sB,GAxDciB,cCEpBiC,E,uKAGF,IAAIC,EAAQ1B,KAAKpB,MAAM+C,UAAUC,QAAO,SAACC,EAAGC,GAC1C,OAAOD,EAAIC,EAAEpD,YACZ,GAECqD,EAAQ/B,KAAKpB,MAAM+C,UAAUzC,KAAI,SAAAC,GACnC,OACE,wBAAIC,IAAKD,EAAKhB,GAAII,UAAU,kBAC1B,yBAAKA,UAAU,mBAAmBY,EAAKX,OACvC,yBAAKD,UAAU,mBAAf,IAAmCY,EAAKT,eAK1CsD,EAAa,yBAAKzD,UAAU,oBAAf,iBAEb0D,EAAY,wBAAI1D,UAAU,oCAAoCwD,GAElE,OACE,yBAAKxD,UAAU,0BACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,gBAAd,gBACCyB,KAAKpB,MAAM+C,UAAU1C,OAASgD,EAAYD,EAC1ChC,KAAKpB,MAAM+C,UAAU1C,OACpB,yBAAKV,UAAU,qBACb,4CACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,qBAAf,QACA,yBAAKA,UAAU,qBAAf,MAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mBAAf,oBACA,yBAAKA,UAAU,qBAAf,MAEF,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,mBAAf,UACA,yBAAKA,UAAU,qBAAf,IAAqCmD,KAIzC,S,GA7COlC,aA6DJS,eARS,SAAAC,GAAK,MAAK,CAChCyB,UAAWzB,EAAMgC,YAAYP,aAOS,KAAzB1B,CAA+BwB,G,QC3D1CU,EAAe,CACjBnD,aAAc,GACdwB,eAAgB,KAChBJ,SAAS,G,QCVL+B,EAAe,CACnBR,UAAW,IAeEA,MAZf,WAAmD,IAA/BzB,EAA8B,uDAAtBiC,EAAcC,EAAQ,uCAChD,OAAQA,EAAO3C,MACb,INDoB,WMGlB,OADA2C,EAAOtC,KAAKuC,eAAgB,EACrB,CACLV,UAAU,GAAD,mBAAMzB,EAAMyB,WAAZ,CAAuBS,EAAOtC,QAE3C,QACE,OAAOI,ICHEoC,EALGC,YAAgB,CAChCpC,mBFQa,WAAmC,IAAlCD,EAAiC,uDAAzBiC,EAAcC,EAAW,uCAC/C,OAAQA,EAAO3C,MACb,ILdwB,eKgBxB,ILd+B,sBKe7B,OAAO,2BAAKS,GAAZ,IAAmBE,SAAS,IAC9B,ILjB0B,iBKkBxB,OAAO,2BACFF,GADL,IAEElB,aAAcoD,EAAOI,QAAQ1C,KAC7BM,SAAS,IAEb,ILrBiC,wBKsB/B,IAAIN,EAAOsC,EAAOK,IAAI3C,KACtB,OAAO,2BACFI,GADL,IAEEM,eAAgBV,EAChBM,SAAS,IAEb,ILzBiC,wBK0B/B,OAAO,2BACFF,GADL,IAEEM,eAAgB,OAEpB,QACE,OAAON,IEhCXgC,gB,0DCNIQ,EAAM,mDAECC,EAAgB,kBAAMC,IAAMC,IAAIH,IAEhCI,EAAsB,SAACnD,GAAD,OAAQiD,IAAMC,IAAIH,EAAM/C,I,WCFjDoD,G,WAQAC,G,WAQAC,G,WAIAC,G,WAIeC,GAxBzB,SAAUJ,IAAV,uEACc,OADd,SACoBK,YAAKT,GADzB,OAEE,OADMF,EADR,gBAEQY,YAAI,CACR5D,KAAM,iBACN+C,QAASC,IAJb,uCAQA,SAAUO,EAAwBZ,GAAlC,uEACc,OADd,SACoBgB,YAAKN,EAAqBV,EAAOzC,IADrD,OAEE,OADM8C,EADR,gBAEQY,YAAI,CACR5D,KAAM,wBACNgD,QAJJ,uCAQA,SAAUQ,IAAV,iEACE,OADF,SACQK,YAAW,eAAgBP,GADnC,uCAIA,SAAUG,IAAV,iEACE,OADF,SACQI,YAAW,sBAAuBN,GAD1C,uCAIe,SAAUG,IAAV,iEACb,OADa,SACPI,YAAI,CACRN,IACAC,MAHW,uCCtBf,IAIMM,GAAiBC,cAGjBC,IAFmBC,OAAOC,sCAAwCC,KAGtEC,YAAgBN,GAAgBO,WAI5BC,GAAQC,YACZ3B,EAbmB,GAenBoB,IAEFF,GAAeU,IAAIf,GAEJa,U,QCmCA/D,I,MAAAA,aATS,SAAAC,GAAK,MAAK,CAChCyB,UAAWzB,EAAMgC,YAAYP,UAC7BnB,eAAgBN,EAAMC,mBAAmBK,kBAOH,KAAzBP,EArDA,SAAArB,GACb,IAAM4B,EAAiB5B,EAAM4B,eAgB7B,OACE,yBAAKjC,UAAU,UACb,2BAAOkB,KAAK,WAAWE,GAAG,YAAYwE,KAAK,WAC3C,yBAAK5F,UAAU,mBACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAM6F,OAAK,EAAChG,GAAG,KAAf,kBAlBJ,kBAAC,IAAMiB,SAAP,KACGmB,GACC,0BAAMjC,UAAU,iBAAiBiC,EAAehC,OAErB,aAA5BI,EAAMyF,SAAShG,UACd,0BAAME,UAAU,iBAAhB,aAE2B,UAA5BK,EAAMyF,SAAShG,UACd,0BAAME,UAAU,iBAAhB,UAeF,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAS6F,OAAK,EAAC7F,UAAU,eAAeH,GAAG,KAA3C,QAGA,kBAAC,IAAD,CAASgG,OAAK,EAAC7F,UAAU,eAAeH,GAAG,YAA3C,aAGA,kBAAC,IAAD,CAASgG,OAAK,EAAC7F,UAAU,eAAeH,GAAG,SAA3C,OAEE,0BAAMG,UAAU,oBAAoBK,EAAM+C,UAAU1C,gBCejDgB,I,MAAAA,aAPS,SAAAC,GAAK,MAAK,CAChClB,aAAckB,EAAMC,mBAAmBnB,iBALd,SAAAqB,GAAQ,MAAK,CACtCvB,QAASwB,YAAmBC,EAASF,MAUxBJ,EAlDE,SAAArB,GACfC,qBAAU,WACRD,EAAME,QAAQC,gBAEb,IACH,IAAIgD,EAAQnD,EAAMI,aAAaE,KAAI,SAAAC,GACjC,OACE,yBAAKC,IAAKD,EAAKhB,GAAII,UAAU,mBAC3B,yBAAKA,UAAU,mBAAf,eAA8CY,EAAKmF,aAEnD,yBAAK/F,UAAU,mBACb,yBAAKA,UAAU,oBACb,yBACEoC,IAAI,yCACJC,IAAI,sBAGR,yBAAKrC,UAAU,uBACb,yBAAKA,UAAU,+BAAf,eACeY,EAAKX,OAEpB,yBAAKD,UAAU,gCAAf,sBAGA,yBAAKA,UAAU,+BAAf,gBACgBY,EAAKT,iBAO/B,OACE,kBAAC,IAAMW,SAAP,KACE,yBAAKd,UAAU,cAAcwD,QC7B7BwC,GACJ,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,IAAD,KACA,kBAAC,KAAD,CAAOQ,UAAWC,KAChB,kBAAC,KAAD,CAAOL,OAAK,EAACM,KAAK,IAAIF,UAAWzE,IACjC,kBAAC,KAAD,CAAO2E,KAAK,eAAeF,UAAWG,IACtC,kBAAC,KAAD,CAAOP,OAAK,EAACM,KAAK,WAAWF,UAAWI,KACxC,kBAAC,KAAD,CAAOR,OAAK,EAACM,KAAK,QAAQF,UAAW/C,MAI3CoD,IAASC,OAAOP,GAASQ,SAASC,eAAe,W","file":"static/js/main.d3712ab5.chunk.js","sourcesContent":["import React from 'react'\nimport './ProductListItem.css'\nimport PropTypes from 'prop-types'\nimport { NavLink } from 'react-router-dom'\n\nconst ProductListItem = ({product}) => {\n    let Id = product.ID\n    return (\n      <NavLink\n        to={{\n          pathname: `/details/${Id}`,\n          productId: { Id }\n        }}\n      >\n        <div className='card'>\n          <div className='card-body'>\n            <h5 className='card-title'>{product.Title}</h5>\n            <div className='card-text-des'>\n              {product.Description}\n            </div>\n            <div className='card-text-price'>\n              Price: {product.PageCount}\n            </div>\n            <NavLink className='navbar-brand' to='/cart'>\n              <button className='card-button'>Buy Now</button>\n            </NavLink>\n          </div>\n        </div>\n      </NavLink>\n    )\n}\n\nProductListItem.propTypes = {\n  product: PropTypes.object,\n  actions: PropTypes.object\n}\n\nexport default ProductListItem\n","import React, { useEffect } from 'react'\nimport './ProductList.css'\nimport ProductListItem from '../ProductListItem/ProductListItem.js'\nimport PropTypes from 'prop-types'\n\nconst ProductList = props => {\n  useEffect(() => {\n    props.actions.getProducts()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  if (props.productItems.length) {\n    var productItems = props.productItems.map(item => {\n      return <ProductListItem {...props} product={item} key={item.ID} />\n    })\n    return <div className='products-container'>{productItems}</div>\n  } else {\n    return <React.Fragment>Loading..... </React.Fragment>\n  }\n}\n\nProductList.propTypes = {\n  productItems: PropTypes.array,\n  actions: PropTypes.object\n}\n\nexport default ProductList\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import img from '../../images/Spinner.gif';\n\nclass Loader extends React.Component {\n  render() {\n    return (\n      <div>\n        {/* { this.props.loading ? ( <img src={img} alt='loading' /> ) : null } */}\n      </div>\n    );\n  }\n}\n\nLoader.propTypes = {\n  loading: PropTypes.bool,\n};\n\nexport default Loader;","import { GET_PRODUCTS, GET_PRODUCT_DETAILS, ADD_ITEM, CLEAR_PRODUCT_DETAILS } from './action-types';\n\nexport const getProducts = () => {\n  return {\n    type: GET_PRODUCTS,\n  };\n};\n\nexport const getProductDetails = (id) => {\n  return {\n    type: GET_PRODUCT_DETAILS,\n    id\n  };\n};\n\nexport const clearProductDetails = (id) => {\n  return {\n    type: CLEAR_PRODUCT_DETAILS,\n  };\n};\n\nexport const addItem = (data) => ({\n  type: ADD_ITEM,\n  data\n});\n","export const PREVIOUS_PAGE = \"PREVIOUS_PAGE\";\nexport const NEXT_PAGE = \"NEXT_PAGE\";\nexport const GET_PRODUCTS = \"GET_PRODUCTS\";\nexport const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\nexport const GET_PRODUCT_DETAILS = \"GET_PRODUCT_DETAILS\";\nexport const FETCH_PRODUCT_DETAILS = \"FETCH_PRODUCT_DETAILS\";\nexport const ADD_ITEM = \"ADD_ITEM\";\nexport const REMOVE_ITEM = \"REMOVE_ITEM\";\nexport const CLEAR_PRODUCT_DETAILS = \"CLEAR_PRODUCT_DETAILS\";\n","import React, { Component } from 'react';\nimport ProductList from './components/ProductList/ProductList.js';\nimport Loader from './components/Loader/Loader';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as Actions from './actions';\n\nimport './App.css';\n\nconst mapStateToProps = state => ({\n  productItems: state.productItemReducer.productItems,\n  loading: state.productItemReducer.loading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(Actions, dispatch)\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"shopping-cart-container\">\n          <Loader {...this.props}/>\n          <ProductList {...this.props}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React, { useEffect } from 'react'\nimport './ProductDetails.css'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { bindActionCreators } from 'redux'\nimport * as Actions from '../../actions'\n\nconst ProductDetails = props => {\n  useEffect(() => {\n    props.actions.getProductDetails(props.match.params.ID)\n    return () => {\n      props.actions.clearProductDetails()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const addProductToCart = data => {\n    props.actions.addItem(data)\n  }\n\n  const addAndGoToCart = data => {\n    props.actions.addItem(data)\n    props.history.push('/cart')\n  }\n\n  let productDetails = props.productDetails\n  if (productDetails) {\n    return (\n      <div className='product-details-container'>\n        <div className='product-details-image'>\n          <img\n            src='https://dummyimage.com/600x400/000/fff'\n            alt='Girl in a jacket'\n          />\n        </div>\n        <div className='product-details-description'>\n          <div>\n            <div className='product-details-description'>\n              Book Title: {productDetails.Title}\n            </div>\n            <div className='product-details-description'>\n              Book price: {productDetails.PageCount}\n            </div>\n            <div className='product-details-description'>\n              Page count: {productDetails.PageCount}\n            </div>\n          </div>\n          <div>\n            <button\n              className='button button-add'\n              onClick={() => addProductToCart(productDetails)}\n            >\n              Add To Cart\n            </button>\n            <button\n              className='button button-buy'\n              onClick={() => addAndGoToCart(productDetails)}\n            >\n              Buy Now\n            </button>\n          </div>\n          <div className='product-details-description product-details-description-text'>\n            Description: {productDetails.Excerpt}\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return <React.Fragment>Loading..... </React.Fragment>\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(Actions, dispatch)\n})\n\nconst mapStateToProps = state => ({\n  productDetails: state.productItemReducer.productDetails,\n  loading: state.productItemReducer.loading\n})\n\nProductDetails.propTypes = {\n  productDetails: PropTypes.object,\n  actions: PropTypes.object\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetails)\n","import React, { Component } from 'react'\nimport './AddressForm.css'\nimport PropTypes from 'prop-types'\n\nclass AddressForm extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n  }\n  render () {\n    return (\n      <React.Fragment>\n        <h3>Shipping address</h3>\n        <form\n          id='contact-form'\n          className=\"address-form\"\n          onSubmit={(e) => this.handleSubmit(e)}\n          method='POST'\n        >\n          <div className='form-group'>\n            <label htmlFor='name'>Full Name</label>\n            <input type='text' id='name' placeholder='Your name..' />\n          </div>\n          <div className='form-group'>\n            <label htmlFor='contact'>Contact</label>\n            <input type='text' id='contact' placeholder='Contact number' />\n          </div>\n          <div className='form-group'>\n            <div className='col-25'>\n              <label htmlFor='addressL1'>Address Line 1</label>\n            </div>\n            <div className='col-75'>\n              <input type='text' id='addressL1' />\n            </div>\n          </div>\n          <div className='form-group'>\n            <div className='col-25'>\n              <label htmlFor='addressL2'>Address Line 2</label>\n            </div>\n            <div className='col-75'>\n              <input type='text' id='addressL2' />\n            </div>\n          </div>\n          <div className='form-group'>\n            <div className='col-25'>\n              <label htmlFor='city'>City</label>\n            </div>\n            <div className='col-75'>\n              <input type='text' id='city' />\n            </div>\n          </div>\n          <div className='form-group'>\n            <div className='col-25'>\n              <label htmlFor='state'>State</label>\n            </div>\n            <div className='col-75'>\n              <input type='text' id='state' />\n            </div>\n          </div>\n          <div className='address-button-group'>\n            <button className='button button-save'>Save Adress</button>\n            <button className='button button-edit'>Edit Adress</button>\n          </div>\n        </form>\n      </React.Fragment>\n    )\n  }\n}\n\nAddressForm.propTypes = {\n  cartItems: PropTypes.object\n}\n\nexport default AddressForm\n","import React, { Component } from 'react'\nimport './Cart.css'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport AddressForm from '../AddressForm/AddressForm'\n\nclass Cart extends Component {\n\n  render () {\n    var total = this.props.cartItems.reduce((a, b) => {\n      return a + b.PageCount\n    }, 0)\n\n    var items = this.props.cartItems.map(item => {\n      return (\n        <li key={item.ID} className='cart-list-item'>\n          <div className='cart-item-title'>{item.Title}</div>\n          <div className='cart-item-price'>${item.PageCount}</div>\n        </li>\n      )\n    })\n\n    var emptyBlock = <div className='alert alert-info'>Cart is empty</div>\n\n    var itemsList = <ul className='list-group-cart list-group-flush'>{items}</ul>\n\n    return (\n      <div className='cart-summary-container'>\n        <div className='address-section'>\n          <AddressForm />\n        </div>\n        <div className='cart-section'>\n          <h3 className='card-summary'>Shopping Bag</h3>\n          {this.props.cartItems.length ? itemsList : emptyBlock}\n          {this.props.cartItems.length ? (\n            <div className='payment-container'>\n              <h3>Payment Info</h3>\n              <div className='cart-tax-group'>\n                <div className='cart__total__text'>Tax:</div>\n                <div className='cart__total__text'>0</div>\n              </div>\n              <div className='cart-tax-group'>\n                <div className='cart-total-text'>Shipping Charge:</div>\n                <div className='cart-total-amount'>0</div>\n              </div>\n              <div className='cart-total-group'>\n                <div className='cart-total-text'>Total:</div>\n                <div className='cart-total-amount'>${total}</div>\n              </div>\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartItems: state.cartReducer.cartItems\n})\n\nCart.propTypes = {\n  cartItems: PropTypes.array\n}\n\nexport default connect(mapStateToProps, null)(Cart)\n","import {\n  GET_PRODUCTS,\n  FETCH_PRODUCTS,\n  GET_PRODUCT_DETAILS,\n  FETCH_PRODUCT_DETAILS,\n  CLEAR_PRODUCT_DETAILS\n} from '../actions/action-types'\n\nlet initialState = {\n  productItems: [],\n  productDetails: null,\n  loading: true\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PRODUCTS:\n      return { ...state, loading: true }\n    case GET_PRODUCT_DETAILS:\n      return { ...state, loading: true }\n    case FETCH_PRODUCTS:\n      return {\n        ...state,\n        productItems: action.payload.data,\n        loading: false\n      }\n    case FETCH_PRODUCT_DETAILS:\n      let data = action.res.data\n      return {\n        ...state,\n        productDetails: data,\n        loading: false\n      }\n    case CLEAR_PRODUCT_DETAILS:\n      return {\n        ...state,\n        productDetails: null\n      }\n    default:\n      return state\n  }\n}\n","import { ADD_ITEM } from '../actions/action-types'\nconst initialState = {\n  cartItems: []\n}\n\nfunction cartItems (state = initialState, action) {\n  switch (action.type) {\n    case ADD_ITEM:\n      action.data.isAddedToCart = true\n      return {\n        cartItems: [...state.cartItems, action.data]\n      }\n    default:\n      return state\n  }\n}\n\nexport default cartItems\n","import { combineReducers } from 'redux';\n\nimport productItemReducer from './productItemReducer';\nimport cartReducer from './cartReducer';\n\nlet rootReducer = combineReducers({\n  productItemReducer,\n  cartReducer,\n});\n\nexport default rootReducer;","import axios from 'axios';\nconst URL = \"https://fakerestapi.azurewebsites.net/api/Books/\";\n\nexport const fetchProducts = () => axios.get(URL);\n\nexport const fetchProductDetails = (id) => axios.get(URL + id);","import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport {fetchProducts, fetchProductDetails} from '../services/api';\n\nfunction* fetchProductsSaga() {\n  const res = yield call(fetchProducts);\n  yield put({\n    type: 'FETCH_PRODUCTS',\n    payload: res\n  });\n}\n\nfunction* fetchProductDetailsSaga(action) {\n  const res = yield call(fetchProductDetails, action.id);\n  yield put({\n    type: 'FETCH_PRODUCT_DETAILS',\n    res\n  });\n}\n\nfunction* watchGetProducts() {\n  yield takeLatest('GET_PRODUCTS', fetchProductsSaga);\n}\n\nfunction* watchGetProductDetails() {\n  yield takeLatest('GET_PRODUCT_DETAILS', fetchProductDetailsSaga);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    watchGetProducts(),\n    watchGetProductDetails(),\n  ]);\n}","import { createStore, applyMiddleware, compose  } from 'redux';\nimport rootReducer from '../reducers';\nimport { logger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from '../sagas/saga'\nconst defaultState = {\n  \n};\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(sagaMiddleware, logger),\n);\n\n// CREATE STORE\nconst store = createStore(\n  rootReducer,\n  defaultState,\n  enhancer\n);\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport './Navbar.css'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nconst Navbar = props => {\n  const productDetails = props.productDetails\n  const getSubtitle = () => {\n    return (\n      <React.Fragment>\n        {productDetails && (\n          <span className='dynamic-title'>{productDetails.Title}</span>\n        )}\n        {props.location.pathname === '/myorder' && (\n          <span className='dynamic-title'>My Orders</span>\n        )}\n        {props.location.pathname === '/cart' && (\n          <span className='dynamic-title'>Cart</span>\n        )}\n      </React.Fragment>\n    )\n  }\n  return (\n    <nav className='navbar'>\n      <input type='checkbox' id='show-menu' role='button' />\n      <div className='container-fluid'>\n        <div className='navbar-left'>\n          <Link exact to='/'>\n            Ecommerce Site\n          </Link>\n          {getSubtitle()}\n        </div>\n        <div className='navbar-right'>\n          <NavLink exact className='navbar-items' to='/'>\n            Home\n          </NavLink>\n          <NavLink exact className='navbar-items' to='/myorder'>\n            My Orders\n          </NavLink>\n          <NavLink exact className='navbar-items' to='/cart'>\n            Cart\n            <span className='badge-cart-count'>{props.cartItems.length}</span>\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = state => ({\n  cartItems: state.cartReducer.cartItems,\n  productDetails: state.productItemReducer.productDetails\n})\n\nNavbar.propTypes = {\n  cartItems: PropTypes.array\n}\n\nexport default connect(mapStateToProps, null)(Navbar)\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as Actions from '../../actions'\nimport './MyOrders.css'\n\nconst MyOrders = props => {\n  useEffect(() => {\n    props.actions.getProducts()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  var items = props.productItems.map(item => {\n    return (\n      <div key={item.ID} className='list-group-item'>\n        <div className='order-item-date'>Order Date: {item.PublishDate}</div>\n\n        <div className='order-list-item'>\n          <div className='order-item-image'>\n            <img\n              src='https://dummyimage.com/120x120/000/fff'\n              alt='Girl in a jacket'\n            />\n          </div>\n          <div className='order-details-group'>\n            <div className='order-item order-item-title'>\n              Book Title: {item.Title}\n            </div>\n            <div className='order-item order-item-Author'>\n              Author Name: Sumit\n            </div>\n            <div className='order-item order-item-price'>\n              Book Price: ${item.PageCount}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  })\n  return (\n    <React.Fragment>\n      <div className='list-group'>{items}</div>\n    </React.Fragment>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(Actions, dispatch)\n})\n\nconst mapStateToProps = state => ({\n  productItems: state.productItemReducer.productItems\n})\nMyOrders.propTypes = {\n  loading: PropTypes.bool\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyOrders)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ProductDetails from './components/ProductDetails/ProductDetails';\nimport Cart from './components/Cart/Cart';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport MyOrders from './components/MyOrders/MyOrders';\n\nconst wrapper = (\n  <Provider store={store}>\n    <Router>\n    <Route component={Navbar} />\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/details/:ID\" component={ProductDetails} />\n      <Route exact path=\"/myorder\" component={MyOrders} />\n      <Route exact path=\"/cart\" component={Cart} />\n    </Router>\n  </Provider>\n);\nReactDOM.render(wrapper, document.getElementById('root'));\n"],"sourceRoot":""}